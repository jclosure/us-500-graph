(function(a){"use strict";function b(a,b,c){var d=document.createElement("a");d.setAttribute("href",a),d.setAttribute("download",c||"graph."+b);var e=document.createEvent("MouseEvent");e.initMouseEvent("click",!0,!1,window,0,0,0,0,0,!1,!1,!1,!1,0,null),d.dispatchEvent(e),d.remove()}function c(a){for(var b=new ArrayBuffer(a.length),c=new Uint8Array(b),d=0;d!=a.length;++d)c[d]=255&a.charCodeAt(d);return b}function d(b){return null===b||b===a?"":("function"==typeof b&&(b=b.toString()),"number"!=typeof b&&(b="string"==typeof b?b:JSON.stringify(b)),b)}function e(b,c){return null===c||c===a?null:c.split(".").reduce(function(a,b){return a[b]},b)}function f(){return this instanceof f?(this.SheetNames=[],void(this.Sheets={})):new f}function g(a,b){b&&(a+=1462);var c=Date.parse(a);return(c-new Date(Date.UTC(1899,11,30)))/864e5}function h(a){for(var b={},c={s:{c:1e7,r:1e7},e:{c:0,r:0}},d=0;d!=a.length;++d)for(var e=0;e!=a[d].length;++e){c.s.r>d&&(c.s.r=d),c.s.c>e&&(c.s.c=e),c.e.r<d&&(c.e.r=d),c.e.c<e&&(c.e.c=e);var f={v:a[d][e]};if(null!=f.v){var h=XLSX.utils.encode_cell({c:e,r:d});"number"==typeof f.v?f.t="n":"boolean"==typeof f.v?f.t="b":f.v instanceof Date?(f.t="n",f.z=XLSX.SSF._table[14],f.v=g(f.v)):f.t="s",b[h]=f}}return c.s.c<1e7&&(b["!ref"]=XLSX.utils.encode_range(c)),b}function i(a,b){var c,f,g,h=0,i={},j=[],k=[];f="edges"===b.what?b.edgesAttributes:b.nodesAttributes,i.id=h++,j.push("id"),"edges"===b.what&&(i.source=h++,j.push("source"),i.target=h++,j.push("target"));for(var l=0;l<a.length;l++)g=a[l],c=e(g,f)||{},Object.keys(c).forEach(function(a){a in i||(i[a]=h++,j.push(d(a)))});k.push(j);for(var l=0;l<a.length;l++){g=a[l];var m=[];m.length=h,m[0]=d(g.id),"edges"===b.what&&(m[1]=d(g.source),m[2]=d(g.target)),c=e(g,f)||{},Object.keys(c).forEach(function(a){m[i[a]]=d(c[a])}),k.push(m)}return k}if("undefined"==typeof sigma)throw new Error("sigma is not declared");if("undefined"==typeof XLSX)throw new Error("XLSX is not declared");sigma.prototype.toXLSX=function(a){a=a||{};var d,e,g,j=new f;if(a.what)if("nodes"===a.what)g=a.which?this.graph.nodes(a.which):this.graph.nodes(),d=h(i(g,a));else{if("edges"!==a.what)throw new TypeError('Invalid argument: "what" is not "nodes" or "edges", was '+a.what);g=a.which?this.graph.edges(a.which):this.graph.edges(),e=h(i(g,a))}else a.what="nodes",d=h(i(this.graph.nodes(),a)),a.what="edges",e=h(i(this.graph.edges(),a));d&&(j.SheetNames.push("Nodes"),j.Sheets.Nodes=d),e&&(j.SheetNames.push("Edges"),j.Sheets.Edges=e);var k=XLSX.write(j,{bookType:"xlsx",bookSST:!1,type:"binary"}),l=new Blob([c(k)],{type:""});b(URL.createObjectURL(l),"xlsx",a.filename)}}).call(this);
//# sourceMappingURL=sigma.exporters.xlsx.min.js.map