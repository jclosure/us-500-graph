(function(){"use strict";function a(a,b,c){function d(a){var b=window.getComputedStyle(a),c=function(a){return parseInt(b.getPropertyValue(a).replace("px",""))||0};return{left:a.getBoundingClientRect().left+c("padding-left"),top:a.getBoundingClientRect().top+c("padding-top")}}function e(){w=!1,n.removeEventListener("mousemove",j),n.removeEventListener("mouseup",i),u.length?setTimeout(function(){r=u[u.length-1],p.addEventListener("mousedown",h)},0):r=null}function f(a){v[a.data.node.id]||(u.push(a.data.node),v[a.data.node.id]=!0,w||(r=u[u.length-1],p.addEventListener("mousedown",h)))}function g(a){var b=u.map(function(a){return a}).indexOf(a.data.node);u.splice(b,1),delete v[a.data.node.id],u.length&&!w?r=u[u.length-1]:p.removeEventListener("mousedown",h)}function h(a){3!=a.which&&(w=!0,r&&l.graph.nodes().length>0&&(p.removeEventListener("mousedown",h),n.addEventListener("mousemove",j),n.addEventListener("mouseup",i),o.settings({mouseEnabled:!1,enableHovering:!1}),k.dispatchEvent("startdrag",{node:r,captor:a,renderer:o})))}function i(a){if(w=!1,p.addEventListener("mousedown",h),n.removeEventListener("mousemove",j),n.removeEventListener("mouseup",i),o.settings({mouseEnabled:!0,enableHovering:!0}),x){if(k.dispatchEvent("drop",{node:r,captor:a,renderer:o}),m)for(var b=m.nodes(),c=0;c<b.length;c++)delete b[c].alphaX,delete b[c].alphaY;l.refresh()}k.dispatchEvent("dragend",{node:r,captor:a,renderer:o}),x=!1,r=null}function j(a){function b(){var b=d(o.container),c=a.clientX-b.left,e=a.clientY-b.top,f=Math.cos(q.angle),g=Math.sin(q.angle),h=l.graph.nodes(),i=[];if(!(h.length<2)){for(var j=0;2>j;j++){var n=h[j];if(n){var p={x:n.x*f+n.y*g,y:n.y*f-n.x*g,renX:n[t+"x"],renY:n[t+"y"]};i.push(p)}}c=(c-i[0].renX)/(i[1].renX-i[0].renX)*(i[1].x-i[0].x)+i[0].x,e=(e-i[0].renY)/(i[1].renY-i[0].renY)*(i[1].y-i[0].y)+i[0].y;var u,v;if(m){var w,y=m.nodes();if(w=-1<y.map(function(a){return a.id}).indexOf(r.id))for(var j=0;j<y.length;j++)s!=r&&(delete y[j].alphaX,delete y[j].alphaY),y[j].alphaX&&y[j].alphaY||(y[j].alphaX=y[j].x-c,y[j].alphaY=y[j].y-e),u=r.x+y[j].alphaX,v=r.y+y[j].alphaY,y[j].x=u,y[j].y=v}r.x=c*f-e*g,r.y=e*f+c*g,l.refresh({skipIndexation:!0}),x=!0,k.dispatchEvent("drag",{node:r,captor:a,renderer:o}),s=r}}if(navigator.userAgent.toLowerCase().indexOf("firefox")>-1){clearTimeout(c);var c=setTimeout(b,0)}else b()}if(sigma.classes.dispatcher.extend(this),sigma.renderers.webgl&&b instanceof sigma.renderers.webgl)throw new Error("The sigma.plugins.dragNodes is not compatible with the WebGL renderer");var k=this,l=a,m=c,n=document.body,o=b,p=b.container.lastChild,q=b.camera,r=null,s=null,t=b.options.prefix,u=[],v={},w=!1,x=!1;b instanceof sigma.renderers.svg&&(p=b.container.firstChild),b.bind("overNode",f),b.bind("outNode",g),b.bind("click",e),l.bind("kill",function(){k.unbindAll()}),this.unbindAll=function(){p.removeEventListener("mousedown",h),n.removeEventListener("mousemove",j),n.removeEventListener("mouseup",i),o.unbind("overNode",f),o.unbind("outNode",g)}}if("undefined"==typeof sigma)throw"sigma is not declared";sigma.utils.pkg("sigma.plugins");var b={};sigma.plugins.dragNodes=function(c,d,e){return b[c.id]||(b[c.id]=new a(c,d,e)),c.bind("kill",function(){sigma.plugins.killDragNodes(c)}),b[c.id]},sigma.plugins.killDragNodes=function(c){b[c.id]instanceof a&&(b[c.id].unbindAll(),delete b[c.id])}}).call(window);
//# sourceMappingURL=sigma.plugins.dragNodes.min.js.map